title: "Arbitrary File Upload leads to PHP Code Execution"

description: "Kerentanan ini terjadi ketika aplikasi web tidak memeriksa File yang diunggah oleh pengguna. Ini memungkinkan penyerang untuk mengunggah berkas yang dapat menjalankan kode PHP berbahaya di Server (Malware). Hal ini bisa berdampak serius, memungkinkan penyerang untuk mengambil kendali sistem atau mencuri data sensitif."

impact: |
  Hal ini berdampak sangat serius, karena terdapat beberapa skenario yang dapat dilakukan ketika File PHP (Malware) yang diunggah dapat dieksekusi:
  - Code Execution: Penyerang dapat menjalankan kode PHP berbahaya untuk melakukan aksi yang merugikan untuk organisasi.
  - Server Takeover: Penyerang dapat mengambil alih kontrol server dengan cara melakukan Remote Shell.
  - Data Exfiltration: Seluruh data sensitif yang tersimpan di dalam Server dapat dicuri dan dieksploitasi oleh penyerang.

remmediation: |
  Untuk memitigasi kerentanan Arbitrary File Upload, pengembang perlu menerapkan mekanisme validasi pada fungsi Upload File.

  Validasi yang perlu diterapkan:
  1. Pengecekan File Extension - Melakukan metode Whitelisting berdasarkan ekstensi File yang dibutuhkan, seperti JPG, JPEG, dan lainnya.
  2. Pengecekan File Header (Signature) - Verifikasi Signature/Header yang terkandung dalam File untuk memastikan bahwa berkas tersebut adalah jenis yang diharapkan.
  3. Pengecekan File Content - Memastikan berkas tersebut tidak mengandung kode berbahaya atau konten yang tidak diinginkan.

references: 
  - "CWE-94: Improper Control of Generation of Code (Code Injection)"
  - "CWE-434: Unrestricted Upload of File with Dangerous Type"
  - "CAPEC-17: Using Malicious Files"
  - "CAPEC-193: PHP Remote File Inclusion"

affected_resources:
  - "Category: Secure Coding"